bananajhkhby only suffixes of your input string, and you don't consider substrings in the middle (non-suffixes). Did you check if your program produces correct results for inputs, such as "123ababa456" ?

          Anyway, I decided to put alternative solution below, which is quite easy to follow.
          The idea :

          Lets denote maximum length of possible solution as currentLen.
          currentLen equals  n - 1 in the beginning, where n is the length of input.

          you start by examining all substrings of input with length = currentLen
          If you find two duplicate strings -> return the result
          If no results for length currentLen are found - decrement it and go back to step 1.
          Repeat this loop 1-3 until you found something or your currentLen reached 0
          Finding duplicate strings at step 2 is implemented using Set of Strings, which is, very simply put : a data structure which keeps your Strings (with very quick lookup) and tells you if you try to insert a string which was already stored.

          I tried to make the code very verbose, but it is still very readable.
          I really hope you try to understand it, usage of Set is limited to couple of lines, don't be startled by it.